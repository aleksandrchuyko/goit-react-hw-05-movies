{"version":3,"file":"static/js/310.bf122dea.chunk.js","mappings":"gPAGaA,EAAaC,EAAAA,GAAAA,KAAH,wMAWVC,EAAeD,EAAAA,GAAAA,OAAH,uaA8BZE,GAZcF,EAAAA,GAAAA,KAAH,mNAYGA,EAAAA,GAAAA,MAAH,2P,gDCqBxB,EA3De,WAAO,IAAD,EACnB,GAAsCG,EAAAA,EAAAA,MAAtC,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAW,UAAGP,EAAYQ,IAAI,gBAAnB,QAA+B,GAC1CC,EAAqBC,SAASH,EAAYI,QAC1CC,EAAsC,IAAlBT,EAAOU,QAEjCC,EAAAA,EAAAA,YAAU,WACJL,GAGJM,EAAAA,GAA2BR,GACxBS,MAAK,SAAAC,GACJb,GAAU,OAAIa,EAAIC,KAAKC,aAExBC,UACF,CAACb,EAAaE,IAWjB,OACE,UAACY,EAAA,EAAD,YACE,UAAC1B,EAAD,CAAY2B,SAXK,SAAAC,GACnB,IAAMC,EAAgBD,EAAEE,OAAOC,SAASnB,YAAYoB,MAAMhB,OAC1DY,EAAEK,iBACEJ,IACFvB,EAAe,CAAE4B,MAAOL,IACxBD,EAAEE,OAAOK,UAMT,WACE,SAAChC,EAAD,CACEiC,KAAK,OACLC,KAAK,cACLC,aAAa,KACbC,WAAS,EACTC,YAAY,kBAEd,SAACtC,EAAD,CAAckC,KAAK,SAAnB,UACE,wCAGJ,mBACEnB,IACA,wBACGT,EAAOiC,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAMpC,GAAxC,SACGgC,EAAMK,SAFFL,EAAME","sources":["pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\n\nexport const SearchForm = styled.form`\n/* margin: 20px auto; */\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchButton = styled.button`\n  display: inline-block;\n  width: 128px;\n  height: 48px;\n  border: 0;\n  /* background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg'); */\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const ButtonLabel = styled.span`\n  position: absolute;\n  /* width: 1px;\n  height: 1px; */\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { Box } from 'components/Box';\nimport { SearchForm, SearchButton, SearchInput } from './Movies.styled';\nimport { useState, useEffect } from 'react';\nimport * as Api from 'services/api-themoviedb';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  const description = searchQuery.get('query') ?? '';\n  const isDescriptionEmpty = Boolean(!description.trim());\n  const isMovieStackEmpty = movies.length === 0;\n\n  useEffect(() => {\n    if (isDescriptionEmpty) {\n      return;\n    }\n    Api.getMoviesByDescription(description)\n      .then(res => {\n        setMovies([...res.data.results]);\n      })\n      .catch();\n  }, [description, isDescriptionEmpty]);\n\n  const handleSubmit = e => {\n    const searchInValue = e.target.elements.description.value.trim();\n    e.preventDefault();\n    if (searchInValue) {\n      setSearchQuery({ query: searchInValue });\n      e.target.reset();\n    }\n  };\n\n  return (\n    <Box>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchInput\n          type=\"text\"\n          name=\"description\"\n          autoComplete=\"on\"\n          autoFocus\n          placeholder=\"Search movie\"\n        />\n        <SearchButton type=\"submit\">\n          <b>Search</b>\n        </SearchButton>\n      </SearchForm>\n      <hr />\n      {!isMovieStackEmpty && (\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </Box>\n  );\n};\n\nexport default Movies;\n"],"names":["SearchForm","styled","SearchButton","SearchInput","useSearchParams","searchQuery","setSearchQuery","useState","movies","setMovies","location","useLocation","description","get","isDescriptionEmpty","Boolean","trim","isMovieStackEmpty","length","useEffect","Api","then","res","data","results","catch","Box","onSubmit","e","searchInValue","target","elements","value","preventDefault","query","reset","type","name","autoComplete","autoFocus","placeholder","map","movie","to","id","state","from","title"],"sourceRoot":""}